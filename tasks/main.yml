---
# tasks file for ansible-arch-setup

- name: Abort if the host is not booted from the Arch install media
  fail:
    msg: "This host is not booted from the Arch install media!"
  when: ansible_nodename != 'archiso'

- name: Synchronize clock via NTP
  command: timedatectl set-ntp true

# Repartition install drive
- name: Wipe install drive and all its partitions
      command: find /dev -wholename "{{ install_drive }}*" -exec wipefs --force --all {} \;

- name: Create boot partition
  parted:
    device: '{{ install_drive }}'
    label: gpt
    number: 1
    part_end: 512MB
    name: boot
    flags: [boot, esp]
    state: present

- name: Create root partition
  parted:
    device: '{{ install_drive }}'
    label: gpt
    number: 2
    part_start: 512MB
    name: root
    flags: [lvm]
    state: present

# Create filesystems
- name: Create FAT32 filesystem in boot partition
  filesystem:
    dev: '{{ install_drive }}{{ boot_partition_suffix }}'
    fstype: vfat
    opts: -F32
    force: yes

- name: Create ext4 filesystem in root volume
  filesystem:
    dev: '{{ install_drive }}{{ root_partition_suffix }}'
    fstype: ext4
    force: yes

- name: Get UUID for boot filesystem
  command: blkid -s UUID -o value '{{ install_drive }}{{ boot_partition_suffix }}'
  register: boot_uuid
  changed_when: false

- name: Get UUID for root filesystem
  command: blkid -s UUID -o value '{{ install_drive }}{{ root_partition_suffix }}'
  register: root_uuid
  changed_when: false

# Mount filesystems
- name: Mount root filesystem
  mount:
    path: /mnt
    src: UUID={{ root_uuid.stdout }}
    fstype: ext4
    state: mounted

- name: Create mountpoint for boot volume
  file:
    path: /mnt/boot
    state: directory

- name: Mount boot filesystem
  mount:
    path: /mnt/boot
    src: UUID={{ boot_uuid.stdout }}
    fstype: vfat
    state: mounted

# Rank Arch mirrors
- name: Install the pacman-contrib package (for rankmirrors)
  pacman:
    name:
      - pacman-contrib
    update_cache: yes

- name: Use rankmirrors to filter the fastest mirrors that support HTTPS
  shell: curl -s "https://www.archlinux.org/mirrorlist/?country=DE&protocol=https&use_mirror_status=on" | sed -e 's/^#Server/Server/' -e '/^#/d' | rankmirrors -n 5 - > /etc/pacman.d/mirrorlist

# Run pacstrap
- name: Run pacstrap
  command: pacstrap /mnt base dhclient dhcpcd efibootmgr grub linux linux-firmware netctl openssh python sudo nano networkmanager intel-ucode mesa amd-ucode nvidia

# Generate fstab
- name: Generate blank fstab
  command: genfstab -U /mnt >> /mnt/etc/fstab

- name: Add root volume to fstab
  mount:
    fstab: /mnt/etc/fstab
    path: /
    src: UUID={{ root_uuid.stdout }}
    fstype: ext4
    opts: defaults
    passno: '1'
    state: present

- name: Add boot volume to fstab
  mount:
    fstab: /mnt/etc/fstab
    path: /boot
    src: UUID={{ boot_uuid.stdout }}
    fstype: vfat
    opts: defaults
    passno: '2'
    state: present

